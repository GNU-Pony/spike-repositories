# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')
i_use_pdf  = get('I_USE_PDF',  'n').lower().startswith('y')
i_use_dvi  = get('I_USE_DVI',  'n').lower().startswith('y')
i_use_ps   = get('I_USE_PS',   'n').lower().startswith('y')
i_use_man  = get('I_USE_MAN',  'y').lower().startswith('y')

pkgname = 'rq'
pkgver = '1.0'
pkgdesc = ' Read plain-text files in blazing speed'
upstream = 'https://github.com/maandree/rq'
arch = ['x86_64']
freedom = SOFTWARE | MEDIA
license = ['MIT']
private = SUPPORTED
depends = ['libc']
makedepends = ['cc', 'libc', 'make', 'coreutils']
if i_use_info or i_use_pdf or i_use_dvi or i_use_ps:
    makedepends.append('texinfo')
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['1477CE9C2F9F5058E214BCEB8B80D0555EADFFB18C7C610ECB5EF913B5116FE5B05F2533AB2C2A983C6E6963833A0B0F7E43C389CDDC19A0D852E11945C9C3674F0634641A8E4867']

_prefix = lambda private : '/usr' if not private else path('~/.local')


def ride(private):
    man(1, 'rq')


def build(startdir, srcdir, pkgdir, private):
    cd('%s/rq-%s' % (srcdir, pkgver))
    params = ['PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'base']
    if i_use_info:
        params.append('info')
    if i_use_pdf:
        params.append('pdf')
    if i_use_dvi:
        params.append('dvi')
    if i_use_ps:
        params.append('ps')
    make(params)


def package(startdir, srcdir, pkgdir, private):
    cd('%s/rq-%s' % (srcdir, pkgver))
    params = ['PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'install-base']
    if i_use_info:
        params.append('install-info')
    if i_use_pdf:
        params.append('install-pdf')
    if i_use_dvi:
        params.append('install-dvi')
    if i_use_ps:
        params.append('install-ps')
    make(params)


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

