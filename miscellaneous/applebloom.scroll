# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')

pkgname = 'applebloom'
pkgver = '1375928474'
pkgdesc = 'Apple Bloom the pony dictionary'
upstream = 'https://github.com/GNU-Pony/applebloom'
arch = ['any']
freedom = SOFTWARE | MEDIA
license = ['AGPL3']
private = SUPPORTED
depends = ['bash', 'coreutils']
makedepends = ['make', 'coreutils', 'sed']
if i_use_info:
    makedepends.append('texinfo')
    makedepends.append('gzip')
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['5D7D08A70DF9F1AFD3255BBFED364E9339DC79647149BF4BD7C4AF7CDB200EC0D148B17E22C8971E1E7CD0508BFB6763FB63295A97E091BFDD7D344D6DA3B18A3789FDCE9ED6036D']

_prefix = lambda private : '/usr' if not private else path('~/.local')


def ride(private):
    words = input('Enter words to lookup: ').replace('\t', ' ')
    while '  ' in words:
        words.replace('  ', ' ')
    execute(['applebloom'] + words.split(' '))


def build(startdir, srcdir, pkgdir, private):
    cd('%s/applebloom-%s' % (srcdir, pkgver))
    make('PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'applebloom')
    if i_use_info:
        make('PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'info')
    else:
        sed([sed_script(' applebloom\\.info\\.gz', '', '^install:'), sed_script(' install -m644 applebloom\\.info\\.gz', '\\t', '&#')], 'Makefile')


def package(startdir, srcdir, pkgdir, private):
    cd('%s/applebloom-%s' % (srcdir, pkgver))
    make('PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'install')
    _dir = '%s%s/share/licenses/%s' % (pkgdir, _prefix(private), pkgname)
    ln('/usr/share/licenses/common/AGPL3', '%s/LICENSE' % _dir)


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

