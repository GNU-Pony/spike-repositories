# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')
i_use_pdf  = get('I_USE_PDF', ' n').lower().startswith('y')
i_use_dvi  = get('I_USE_DVI',  'n').lower().startswith('y')
i_use_ps   = get('I_USE_PS',   'n').lower().startswith('y')
i_use_man  = get('I_USE_MAN',  'Y').lower().startswith('y')

pkgname = 'median'
pkgver = '1.2'
pkgdesc = 'Calculate the median values for a set of groups'
upstream = 'https://github.com/maandree/median'
arch = ['any']
freedom = SOFTWARE | MEDIA
license = ['GPL3+']
if i_use_info or i_use_pdf or i_use_dvi or i_use_ps:
    license.append('GFDL1.3+')
private = SUPPORTED
depends = ['python3']
makedepends = ['make', 'coreutils']
if i_use_info or i_use_pdf or i_use_dvi or i_use_ps:
    makedepends.append('texinfo')
if i_use_pdf or i_use_dvi or i_use_ps:
    makedepends.append('texlive-core')
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['2F6524595E697F6886D62B43DBB583820B92ECD18BD0EEF2DC99FC98377AFCB07FD01AF771AA2FDB28566F8450567B224110466B1F208A3100199040F285EA1BB4EFDD29D46224A0']

_prefix = lambda private : '/usr' if not private else path('~/.local')


def ride(private):
    execute('median')


def build(startdir, srcdir, pkgdir, private):
    cd('%s/median-%s' % (srcdir, pkgver))
    if i_use_info or i_use_pdf or i_use_dvi or i_use_ps:
        params = ['PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir]
        if i_use_info:
            params.append('info')
        if i_use_pdf:
            params.append('pdf')
        if i_use_dvi:
            params.append('dvi')
        if i_use_ps:
            params.append('ps')
        make(params)


def package(startdir, srcdir, pkgdir, private):
    cd('%s/median-%s' % (srcdir, pkgver))
    params = ['PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir]
    params.append('install-base')
    if i_use_info:
        params.append('install-info')
    if i_use_pdf:
        params.append('install-pdf')
    if i_use_dvi:
        params.append('install-dvi')
    if i_use_ps:
        params.append('install-ps')
    if i_use_man:
        params.append('install-man')
    make(params)


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

