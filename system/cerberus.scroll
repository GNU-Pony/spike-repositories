# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info      = get('I_USE_INFO',       'y').lower().startswith('y')
i_use_pdf       = get('I_USE_PDF',        'n').lower().startswith('y')
i_use_ps        = get('I_USE_PS',         'n').lower().startswith('y')
i_use_dvi       = get('I_USE_DVI',        'n').lower().startswith('y')
i_use_auth      = get('I_USE_AUTH',       'pam').lower()
i_use_login     = get('I_USE_LOGIN',      '').lower() == 'cerberus'
i_use_vcs       = get('I_USE_VCS',        'y').lower().startswith('y')
i_use_vcsa      = get('I_USE_VCSA',       'y').lower().startswith('y')
i_use_tty_group = get('I_USE_TTY_GROUP',  'y').lower().startswith('y')
i_use_force     = get('I_USE_FORCE',      'n').lower().startswith('y')

for _auth in i_use_auth.split(':') + ['crypt']:
    if _auth in ('pam', 'crypt', 'none'):
        i_use_auth = _auth
        break

pkgname = 'cerberus'
pkgver = '1414618479'
pkgdesc = 'A configurable minimal login program that uses libpassphrase'
upstream = 'https://github.com/GNU-Pony/cerberus'
arch = ['x86_64']
freedom = SOFTWARE | MEDIA
license = ['GPL3']
private = UNSUPPORTED
depends = ['glibc', 'libpassphrase>=1400850322']
if i_use_vcs or i_use_vcsa:
    depends.append('linux')
if i_use_auth == 'pam':
    depends.append(i_use_auth)
if i_use_force or not i_use_auth == 'pam':
    arch.append('armv6')
makedepends = ['make', 'coreutils', 'gcc']
if i_use_info or i_use_pdf or i_use_ps or i_use_dvi:
    makedepends.append('texinfo')
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['C1BBFACDC012504A281480FA51B36FDA31F16AFD4F37E24BC10AC7825401477A4301F1F84ADF6931BE991233A29B9F4E9FCDC52F4476FA0EC5951D99D5027D5B3A4573467ADCFE6C']

# Technically you can do a private installation (provided you adapt
# the instructions below), but that makes no sense because it should
# only be started from a getty program or a service. If you do a
# private installation (for a user other than root) than root need to
# take (group) ownership of it and forward permissions by setting the
# setuid (or setgid) bit and with that comes security holes inherited
# by cerberus design to be minimal and skip use cases that should
# never happen.



def _configure():
    '''
    See `info cerberus configuring` for how to configure cerberus.
    AUTH is set using I_USE_AUTH, all other configurations can be done here.
    
    @return  :list<str>  Options other than AUTH pass to `make` to configure cerberus
    '''
    # General configurations
    cpp_defs     = []
    make_opts    = []
    
    # PATH configurations
    local_       = '/usr/local'
    usr_         = '/usr'
    root_        = ''
    local_games_ = '/usr/local/games'
    usr_games_   = '/usr/games'
    root_games_  = None
    
    path         = []
    path_root    = []
    
    if i_use_vcs:
        cpp_defs.append('OWN_VCS')
    if i_use_vcsa:
        cpp_defs.append('OWN_VCSA')
    if i_use_tty_group:
        cpp_defs.append('USE_TTY_GROUP')
    
    for prefix_ in [local_, usr_, root_, local_games_, usr_games_, root_games_]:
        path.append(prefix_ + '/bin')
        
    for prefix_ in [local_, usr_, root_]:
        path_root.append(prefix_ + '/sbin')
        path_root.append(prefix_ + '/bin')
    
    # Return configurations
    make_opts.append('EXTRA_CPP_FLAGS="-D%s"' % ' -D'.join(_cpp_defs))
    make_opts.append('PATH=%s' % ':'.join(path))
    make_opts.append('PATH_ROOT=%s' % ':'.join(path_root))
    return make_opts



def ride(private):
    execute(['info', 'cerberus'])


_make_opts = None

def build(startdir, srcdir, pkgdir, private):
    cd('%s/cerberus-%s' % (srcdir, pkgver))
    _make_opts = _configure() + ['AUTH=%s' % i_use_auth]
    _make_opts += ['PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir]
    params = _make_opts[:]
    params.append('command')
    if i_use_info:
        params.append('info')
    if i_use_pdf:
        params.append('pdf')
    if i_use_ps:
        params.append('ps')
    if i_use_dvi:
        params.append('dvi')
    make(params)


def package(startdir, srcdir, pkgdir, private):
    cd('%s/cerberus-%s' % (srcdir, pkgver))
    params = _make_opts[:]
    params.append('install-base')
    if i_use_info:
        params.append('install-info')
    if i_use_pdf:
        params.append('install-pdf')
    if i_use_ps:
        params.append('install-ps')
    if i_use_dvi:
        params.append('install-dvi')
    make(params)
    if i_use_login:
        ln('cerberus', '%s/usr/sbin/login' % pkgdir)
    _dir = '%s%s/share/licenses/%s' % (pkgdir, _prefix(private), pkgname)
    rm('%s/LICENSE' % _dir)
    ln('/usr/share/licenses/common/GPL3', '%s/LICENSE' % _dir)


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

