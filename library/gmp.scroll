# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')

pkgname = 'gmp'
pkgver = '5.1.3'
pkgdesc = 'A free high performance library for arbitrary precision arithmetic'
upstream = 'http://gmplib.org/'
arch = ['x86_64']
freedom = SOFTWARE | MEDIA
license = ['LGPL3']
private = SUPPORTED
depends = ['gcc-libs', 'sh']
makedepends = ['gcc', 'sh', 'coreutils', 'make', 'sed', 'm4', 'grep', 'findutils']
makedepends += ['texinfo', 'gzip'] # for info manual
source = ['http://ftp.gmplib.org/gmp/gmp-%s.tar.xz' % pkgver] # Sweden
#source = ['https://ftp.gnu.org/gnu/gmp/gmp-%s.tar.xz' % pkgver] # United States
sha3sums = ['23F1454C812D26F1D357A0E46F6658FB569F1B73EF75BAEC1B8AC8230C525821C7BF73E422BF69B0332FA329E2EEFA99680CCB8373EDC3534D6AEC098E21767EC4713F63E649F510']

_prefix = lambda private : '/usr' if not private else path('~/.local')


globals()['scroll_gmp_build'] = []


def ride(private):
    execute(['info', 'gmp'])


def build(startdir, srcdir, pkgdir, private):
    cd('%s/gmp-%s' % (srcdir, pkgver))
    HOST = get('HOST')
    args = ['./configure', '--build=' + HOST, '--prefix=' + _prefix(private)]
    #args.append('--disable-assert')      # enable ASSERT checking
    #args.append('--disable-assembly')    # disable the use of assembly loops
    #args.append('--disable-fft')         # disable FFTs for multiplication
    #args.append('--enable-old-fft-full') # enable old mpn_mul_fft_full for multiplication
    #args.append('--enable-nails')        # use nails on limbs
    #args.append('--enable-profiling')    # build with profiler support
    #args.append('--enable-fat')          # build a fat binary on systems that support it
    #args.append('--enable-minithres')    # choose minimal thresholds for testing
    # See `info gmp` for more
    args += globals()['scroll_gmp_build']
    make()
    make('check') # Very imporant, so it is forced upon you


def package(startdir, srcdir, pkgdir, private):
    cd('%s/gmp-%s' % (srcdir, pkgver))
    make('DESTDIR=%s' % pkgdir, 'install')
    _dir = pkgdir + _prefix(private) + '/share/licenses/' + pkgname
    mkdir_p(_dir)
    ln('/usr/share/licenses/common/LGPL3', '%s/LICENSE' % _dir)
    install('COPYING', '%s/COPYING' % _dir)
    if not i_use_info:
        rm_r(pkgdir + _prefix(private) + '/share/info')


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

