# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')
i_use_man = get('I_USE_MAN', 'y').lower().startswith('y')
i_use_locale = get('I_USE_LOCALE'. '*')

pkgname = 'grep'
pkgver = '2.15'
pkgdesc = 'String search utility'
upstream = 'http://www.gnu.org/software/grep/grep.html'
arch = ['x86_64']
freedom = SOFTWARE | MEDIA
license = ['GPL3']
private = SUPPORTED
depends = ['sh', 'glibc', 'pcre']
makedepends = ['glibc', 'gcc', 'pcre', 'sh', 'make', 'sed', 'coreutils', 'm4', 'grep']
makedepends.append('texinfo') # for info manual
makedepends.append('gzip') # for manpage and info
source = ['ftp://ftp.gnu.org/gnu/grep/grep-%s.tar.xz' % pkgver]
sha3sums = ['1228D3B2F40AA324653829436BBB58D1C787610D0F46EDC550F27C8F20013E275F467A8BAC0EADB27E7A35AC4143410E31C09D4F2BA777B803EC1B9A647127D12675078255464F94']


_prefix = lambda private : (path('~/.local') if private else '/usr')


def ride(private):
    if i_use_info:
        execute('info', 'grep', 'invoking')
    else:
        execute('man', '1', 'grep')


def build(startdir, srcdir, pkgdir, private):
    cd('%s/which-%s' % (srcdir, pkgver))
    execute('./configure', '--prefix=%s' % _prefix(private), '--without-included-regex')
    make()


def package(startdir, srcdir, pkgdir, private):
    cd('%s/which-%s' % (srcdir, pkgver))
    make('DESTDIR=%s' % pkgdir, 'install')
    
    _licenses = pkgdir + _prefix(private) + '/share/licenses'
    mkdir_p(_licenses)
    ln('/usr/share/licenses/common/GPL3', '%s/%s' % (_licenses, pkgname))
    
    if not man:
        rm_r(pkgdir + _prefix(private) + '/share/man')
    if not i_use_info:
        rm_r(pkgdir + _prefix(private) + '/share/info')
    filter_locale(i_use_locale, pkgdir, _prefix(private))


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

