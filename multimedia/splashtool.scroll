# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')

pkgname = 'splashtool'
pkgver = '1375927355'
pkgdesc = 'A simple tool for creating SYSLINUX splashes without fuss'
upstream = 'https://github.com/GNU-Pony/splashtool'
arch = ['any']
freedom = SOFTWARE | MEDIA
license = ['AGPL3']
private = SUPPORTED
depends = ['java-runtime: 1 source file is written in Java',
           'python3: 2 source files are written in Python 3',
           'sh: 1 source file is written in shell script',
           'kbd: default font',
           'nafe: read font files',
           'gzip: decompress fonts']
makedepends = ['make', 'coreutils', 'java-environment']
if i_use_info:
    makedepends.append('texinfo')
    makedepends.append('gzip')
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['23072FC5071275652876B73FE8D0C9BFBE763CEEFADC9BE1C7CD95FBA21428051B15D36BAB4D397DB5CC4F57513D41158112EFDE4C4ED35CD592FACAA71033EDC01AC47189318D5A']

_prefix = lambda private : '/usr' if not private else path('~/.local')


def ride(private):
    execute(['info', 'splashtool', 'Invoking'])


def build(startdir, srcdir, pkgdir, private):
    cd('%s/splashtool-%s' % (srcdir, pkgver))
    make('classes')
    if i_use_info:
        make('info')
    else:
        sed([sed_script(' splashtool\\.info\\.gz', '', '^install:'), sed_script(' install -m644 splashtool\\.info\\.gz', '\\t', '&#')], 'Makefile')


def package(startdir, srcdir, pkgdir, private):
    cd('%s/splashtool-%s' % (srcdir, pkgver))
    make('PKGNAME=' + pkgname, 'PREFIX=' + _prefix(private), 'DESTDIR=' + pkgdir, 'install')
    rm('%s%s/share/licenses/%s/LICENSE' % (pkgdir, _prefix(private), pkgname))
    ln('/usr/share/licenses/common/AGPL3', '%s%s/share/licenses/%s/LICENSE' % (pkgdir, _prefix(private), pkgname))


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

