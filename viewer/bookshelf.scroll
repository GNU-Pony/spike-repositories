# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')

pkgname = 'bookshelf'
pkgver = '1'
pkgdesc = 'Virtual bookshelf browser for the terminal'
upstream = 'https://github.com/maandree/bookshelf'
arch = ['any']
freedom = SOFTWARE | MEDIA
license = ['GPL3+']
private = SUPPORTED
depends = ['grep', 'bash', 'coreutils']
makedepends = ['make', 'coreutils']
if i_use_info:
    makedepends.append('texinfo')
    makedepends.append('gzip')
optdepends = ['jfbview: default document viewer under TTY',
              'xpdf: default document viewer under X']
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['9E88C5C6E4B426C2A4CAB8C13325E260107A5DB7B6FA98E04E2AF4FC41206F10CBBDB3481FDF14822EEFED70DD6BACA4D6649D589B6004320B0352B5747CBCFC55C662140D7BC97E']

_prefix = lambda private : '/usr' if not private else path('~/.local')


def ride(private):
    execute(['info', 'bootshelf'])


def build(startdir, srcdir, pkgdir, private):
    cd('%s/bookshelf-%s' % (srcdir, pkgver))
    if i_use_info:
        make('PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'info')


def package(startdir, srcdir, pkgdir, private):
    cd('%s/bookshelf-%s' % (srcdir, pkgver))
    make('PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'install-cmd', 'install-license')
    if i_use_info:
        make('PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'install-info')
    _dir = '%s%s/share/licenses/%s' % (pkgdir, _prefix(private), pkgname)
    rm('%s/LICENSE' % _dir)
    ln('/usr/share/licenses/common/GPL3', '%s/LICENSE' % _dir)


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

