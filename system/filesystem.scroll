# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *
import os

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')
i_use_skel = get('I_USE_SKEL', 'y').lower().startswith('y')
i_use_bootdir = get('I_USE_BOOTDIR', 'normal')

pkgname = 'filesystem'
pkgver = '1.0.1'
pkgdesc = 'Filesystem hierarchy implementation for GNU/Pony'
upstream = 'https://github.com/GNU-Pony/filesystem'
arch = ['any']
freedom = SOFTWARE | MEDIA
license = ['GPL3']
private = SUPPORTED
groups = ['base']
makedepends = ['make', 'coreutils']
if i_use_info:
    makedepends.append('texinfo')
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['C44F1BAAFBE89E207BD27E0310FB20F31C9B934B1FCBDD228EEE2469B20023E0E3A73FF17D3570096F0B07B5FC08E39522559F5EFC54FF2477AD6292760F0C7C7FCD0F1F409CF90D']

_prefix = lambda private : '/usr' if not private else path('~/.local')
_info_dir = lambda private : '%s/share/info' % _prefix(private)


def ride(private):
    execute(['info', 'filesystem'] if not private else ['info', 'filesystem', 'User hierarchy'])


def build(startdir, srcdir, pkgdir, private):
    if i_use_info:
        make('DESTDIR=%s' % pkgdir, 'info')


def package(startdir, srcdir, pkgdir, private):
    cd('%s/filesystem-%s' % (srcdir, pkgver))
    if private:
        make('BOOT=%s' % i_use_bootdir, 'DESTDIR=%s' % pkgdir, 'install-private')
    else:
        make('BOOT=%s' % i_use_bootdir, 'DESTDIR=%s' % pkgdir, 'install')
        if i_use_skel:
            make('BOOT=%s' % i_use_bootdir, 'DESTDIR=%s' % pkgdir, 'install-skel')
    if i_use_info:
        install('filesystem.info.gz', '%s%s/filesystem.info.gz' % (pkgdir, _info_dir(private)))
    _dir = '%s%s/share/licenses/%s' % (pkgdir, _prefix(private), pkgname)
    mkdir_p(_dir)
    install('COPYING', '%s/COPYING' % _dir)
    ln('/usr/share/licenses/common/GPL3', '%s/LICENSE' % _dir)


def post_install(tmpdir, rootdir, installedfiles, private):
    if i_use_info:
        install_info('%s/filesystem.info.gz' % _info_dir(private), _info_dir(private))


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    if not i_use_info:
        if ('%s/filesystem.info.gz' % _info_dir(private) in installedfiles) and os.path.exists('%s/dir' % _info_dir(private)):
            uninstall_info('%s/filesystem.info.gz' % _info_dir(private), _info_dir(private))
    else:
        install_info('%s/filesystem.info.gz' % _info_dir(private), _info_dir(private))


def post_uninstall(tmpdir, rootdir, installedfiles, private):
    if ('%s/filesystem.info.gz' % _info_dir(private) in installedfiles) and os.path.exists('%s/dir' % _info_dir(private)):
        uninstall_info('%s/filesystem.info.gz' % _info_dir(private), _info_dir(private))

