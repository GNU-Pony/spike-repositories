# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')

pkgname = 'gpp'
pkgver = '1.3'
pkgdesc = 'Bash based preprocessor for anything'
upstream = 'https://github.com/maandree/gpp'
arch = ['any']
freedom = SOFTWARE | MEDIA
license = ['GPL3+']
private = SUPPORTED
depends = ['python>=3', 'bash']
makedepends = ['make', 'coreutils', 'python3']
if i_use_info:
    makedepends.append('texinfo')
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['003101DA33B55C02FFDC6F00D727DF06B332DD5C055CD72A9024BFC173932642113989DAA1635180118458CEB06232721FA74A4ABE8BD1DD61B0CA3DC7935908D26CBFF6B54E72A3']

_prefix = lambda private : '/usr' if not private else path('~/.local')


def ride(private):
    execute('gpp')


def build(startdir, srcdir, pkgdir, private):
    cd('%s/gpp-%s' % (srcdir, pkgver))
    params = ['PREFIX=%s' % _prefix(private),
              'PKGNAME=%s' % pkgname,
              'DESTDIR=%s' % pkgdir,
              'PY=python3',
              'VERSION=%s' % pkgver, # Incase this is forgotten upstream.
              'gpp']
    make(params + (['info'] if i_use_info else []))


def package(startdir, srcdir, pkgdir, private):
    cd('%s/gpp-%s' % (srcdir, pkgver))
    params = ['PREFIX=%s' % _prefix(private),
              'PKGNAME=%s' % pkgname,
              'DESTDIR=%s' % pkgdir,
              'PY=python3',
              'VERSION=%s' % pkgver,
              'install-core']
    make(params + (['installinfo'] if i_use_info else []))
    _dir = '%s%s/share/licenses/%s' % (pkgdir, _prefix(private), pkgname)
    rm('%s/LICENSE' % _dir)
    ln('/usr/share/licenses/common/GPL3', '%s/LICENSE' % _dir)


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

