# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')

pkgname = 'mongoclock'
pkgver = '1'
pkgdesc = 'Just a humongous clock for the terminal'
upstream = 'https://github.com/maandree/mongoclock'
arch = ['any']
freedom = SOFTWARE | MEDIA
license = ['GNUAllPermissive']
private = SUPPORTED
depends = ['sh', 'python3', 'coreutils']
makedepends = ['make', 'coreutils', 'sed']
if i_use_info:
    makedepends.append('texinfo')
    makedepends.append('gzip')
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['6CA8AAF56FF806DAF919F6D92197AC5E3437327F5E2B5D56DC2F26E8A5F8F42DC22E35C48F359AA230AC87684240C7D4CC6822102E982667F892101822F06ABC79FE99E43630A7D3']

_prefix = lambda private : '/usr' if not private else path('~/.local')


def ride(private):
    execute('mongoclock')


def build(startdir, srcdir, pkgdir, private):
    cd('%s/mongoclock-%s' % (srcdir, pkgver))
    make('PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'mongoclock.install')
    if i_use_info:
        make('PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'info')


def package(startdir, srcdir, pkgdir, private):
    cd('%s/mongoclock-%s' % (srcdir, pkgver))
    make('PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'install-cmd', 'install-license')
    if i_use_info:
        make('PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'install-info')


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

