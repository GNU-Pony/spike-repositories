# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

pkgname = 'filesystem-simplified'
pkgver = '1.1'
pkgdesc = 'Filesystem hierarchy simplification layer'
upstream = 'https://github.com/GNU-Pony/filesystem'
arch = ['any']
freedom = SOFTWARE | MEDIA
license = ['GPL3']
private = UNSUPPORTED
extension = 'filesystem'
makedepends = ['make', 'coreutils']
options = ['emptydirs']
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['AFFC465C124AA5C5DF697E591DE4A54239B95BEC604B7D568BA51005089BF9C80BEA69631A2C4AB39E472B26EAC6A3FE5D4BB15A2C98200F946EA4F2D781F43075C7FDFA7907D070']

_params = []


def ride(private):
    execute(['info', 'filesystem', 'Simplified hierarchy'])


def package(startdir, srcdir, pkgdir, private):
    cd('%s/filesystem-%s' % (srcdir, pkgver))
    make(_params + ['DESTDIR=%s' % pkgdir, 'install-extension'])
    _dir = '%s/usr/share/licenses' % pkgdir
    mkdir_p(_dir)
    ln(extension, '%s/%s' % (_dir, pkgname))


def pre_install(tmpdir, rootdir, private):
    def _same(a, b, root):
        a = os.path.realpath(root + a)
        b = os.path.realpath(root + b)
        if a.startswith(root):
            a = a[len(root):]
        if b.startswith(root):
            b = b[len(root):]
        return a == b
    with_libraries64 = os.path.lexists('%s/lib64' % rootdir) and not _same('/lib64', '/lib', rootdir)
    with_usr_games   = os.path.lexists('%s/usr/games' % rootdir) and not _same('/usr/games', '/usr', rootdir)
    with_local_games = os.path.lexists('%s/usr/local/games' % rootdir) and not _same('/usr/local/games', '/usr/local', rootdir)
    with_multilib    = os.path.lexists('%s/usr/libmulti' % rootdir)
    with_extended    = os.path.lexists('%s/info' % rootdir) and os.path.lexists('%s/share' % rootdir)
    with_libraries64 = 'with_libraries64=' + ('yes' if with_libraries64 else 'no')
    with_usr_games   = 'with_usr_games='   + ('yes' if with_usr_games   else 'no')
    with_local_games = 'with_local_games=' + ('yes' if with_local_games else 'no')
    with_multilib    = 'with_multilib='    + ('yes' if with_multilib    else 'no')
    with_extended    = 'with_extended='    + ('yes' if with_extended    else 'no')
    for p in (with_libraries64, with_usr_games, with_local_games, with_multilib, with_extended):
        _params.append(p)

