# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')
i_use_pdf  = get('I_USE_PDF',  'n').lower().startswith('y')
i_use_ps   = get('I_USE_PS',   'n').lower().startswith('y')
i_use_dvi  = get('I_USE_DVI',  'n').lower().startswith('y')

i_use_bash = get('I_USE_BASH', 'y').lower().startswith('y')
i_use_fish = get('I_USE_FISH', 'y').lower().startswith('y')
i_use_zsh  = get('I_USE_ZSH',  'y').lower().startswith('y')

x               = get('I_USE_X',         'y')
i_use_x_randr   = get('I_USE_X_RANDR',     x).lower().startswith('y')
i_use_x_vidmode = get('I_USE_X_VIDMODE', 'n').lower().startswith('y')
i_use_x_idcrtc  = get('I_USE_X_IDCRTC',    x).lower().startswith('y')
i_use_x_icc     = get('I_USE_X_ICC',       x).lower().startswith('y')
i_use_drm       = get('I_USE_DRM',       'y').lower().startswith('y')

pkgname = 'blueshift'
pkgver = '1.15'
pkgdesc = 'An extensible and highly configurable alternative to redshift'
upstream = 'https://github.com/maandree/blueshift'
arch = ['x86_64', 'i686']
freedom = SOFTWARE | MEDIA
license = ['AGPL3', 'GPL3', 'GFDL1.3']
private = SUPPORTED
_deps = []
if i_use_x_randr or i_use_x_idcrtc or i_use_x_icc:
    _deps += ['libxcb']
if i_use_x_vidmode:
    _deps += ['libx11', 'libxxf86vm']
if i_use_drm:
    _deps += ['libdrm']
depends = ['python3', 'libc', 'argparser-python'] + _deps
optdepends = ['linux: For backlight support via sysfs',
              'adjbacklight: For permission-hasslefree backlight adjustments via sysfs',
              'wget: For weather conditions']
makedepends = ['cython', 'c99', 'libc', 'python3', 'make', 'coreutils', 'sed', 'zip', 'pkg-config'] + _deps
if i_use_info or i_use_pdf or i_use_ps or i_use_dvi:
    makedepends.append('texinfo')
if i_use_pdf or i_use_ps or i_use_dvi:
    makedepends.append('texlive-core')
if i_use_bash or i_use_fish or i_use_zsh:
    makedepends.append('auto-auto-complete')
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['6684B2DCBDCFAA2504B95AF5A2440879253090A6950D596020B46AC2F8705C879D47562C0B715A6480947B25E47544BCAE6AE02A5921DD06C2A7C95C0927B624DC5A6EA664001632']

_prefix = lambda private : '/usr' if not private else path('~/.local')


_server_bindings = []
if i_use_x_randr:
    _server_bindings.append('randr')
if i_use_x_vidmode:
    _server_bindings.append('vidmode')
if i_use_drm:
    _server_bindings.append('drm')

_execs = []
if i_use_x_idcrtc:
    _execs.append('idcrtc')
if i_use_x_icc:
    _execs.append('iccprofile')


def ride(private):
    info('blueshift')


def build(startdir, srcdir, pkgdir, private):
    cd('%s/blueshift-%s' % (srcdir, pkgver))
    params = ['PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir]
    params.append('SERVER_BINDINGS=%s' % ' '.join(_server_bindings))
    params.append('EXECS=%s' % ' '.join(_execs))
    params.append('command')
    if i_use_info:
        params.append('info')
    if i_use_pdf:
        params.append('pdf')
    if i_use_ps:
        params.append('ps')
    if i_use_dvi:
        params.append('dvi')
    if i_use_bash:
        params.append('bash')
    if i_use_fish:
        params.append('fish')
    if i_use_zsh:
        params.append('zsh')
    LDFLAGS = get('LDFLAGS', '')
    LDFLAGS = LDFLAGS.replace('--as-needed', '').replace(',,', ',')
    export('LDFLAGS', LDFLAGS)
    make(params)


def package(startdir, srcdir, pkgdir, private):
    cd('%s/blueshift-%s' % (srcdir, pkgver))
    params = ['PREFIX=%s' % _prefix(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir]
    params.append('SERVER_BINDINGS=%s' % ' '.join(_server_bindings))
    params.append('EXECS=%s' % ' '.join(_execs))
    params.append('install-base')
    params.append('install-examples')
    if i_use_info:
        params.append('install-info')
    if i_use_pdf:
        params.append('install-pdf')
    if i_use_ps:
        params.append('install-ps')
    if i_use_dvi:
        params.append('install-dvi')
    if i_use_bash:
        params.append('install-bash')
    if i_use_fish:
        params.append('install-fish')
    if i_use_zsh:
        params.append('install-zsh')
    make(params)
    _dir = '%s%s/share/licenses/%s' % (pkgdir, _prefix(private), pkgname)
    rm('%s/LICENSE.agpl3' % _dir)
    rm('%s/LICENSE.fdl1.3' % _dir)
    rm('%s/LICENSE.gpl3' % _dir)
    ln('/usr/share/licenses/common/AGPL3', '%s/LICENSE.agpl3' % _dir)
    ln('/usr/share/licenses/common/GFDL1.3', '%s/LICENSE.fdl1.3' % _dir)
    ln('/usr/share/licenses/common/GPL3', '%s/LICENSE.gpl3' % _dir)


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

