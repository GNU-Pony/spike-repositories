# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info     = get('I_USE_INFO',     'y').lower().startswith('y')
i_use_man      = get('I_USE_MAN',      'y').lower().startswith('y')
i_use_dmalloc  = get('I_USE_DMALLOC',  'n').lower().startswith('y')
i_use_locale   = get('I_USE_LOCALE',   '*')

pkgname = 'recode'
pkgver = '3.6'
pkgdesc = 'Converts files between various character sets and usages'
upstream = 'http://recode.progiciels-bpi.ca'
arch = ['x86_64']
freedom = SOFTWARE | MEDIA
license = ['GPL2', 'LGPL2.1']
private = SUPPORTED
depends = ['glibc']
makedepends = ['gcc', 'glibc', 'sh', 'm4', 'sed', 'grep' ,'findutils',
               'make', 'coreutils', 'libtool', 'autoconf', 'texinfo']
source = ['https://github.com/pinard/Recode/archive/v%s.tar.gz' % pkgver,
          'http://ftp.de.debian.org/debian/pool/main/r/recode/recode_3.6-17.diff.gz',
          'recode@as-if.patch', 'recode@gettextfix.diff']
noextract = source[2:]
sha3sums = ['C22E52541199C5C4C9F024FD0F49C3C03D6CE2DAAB0F1F3F4B2836D97DE5FFEA5D1C6A6F0F8EB16B4093CCEE7F9AAD4C191F415A0D83D70CC9B90D8C751AA42702D47DF1FE02ABD2',
            '9785C79118F35FE7BA47EAAF49C4F3078C42D3BDAB20718E03533F3226EDB54516515F9498FFC8693D48C2860DBC7DD51F0F194989F93DBA40877D9D97C0FB529126EAA6175B64EE',
            None, None]

_prefix = lambda private : '/usr' if not private else path('~/.local')


def ride(private):
    if i_use_info:
        info('recode')
    else:
        man(1, 'recode')


def build(startdir, srcdir, pkgdir, private):
    cd('%s/Recode-%s' % (srcdir, pkgver))
    
    patch('recode@as-if.patch')
    patch('recode@gettextfix.diff')
    patch('recode_3.6-17.diff')
    sed('1i#include <stdlib.h>', 'src/argmatch.c')
    sed(['/^AM_C_PROTOTYPES/d', '/^AUTOMAKE_OPTIONS.*ansi2knr/d'], ['configure.in', 'src/Makefile.am'])
    
    rm('acinclude.m4')    
    execute('autoreconf', '-fi')
    execute('libtoolize')
    execute('./configure',
            '--prefix=' + _prefix(private),
            '--mandir=%s/share/man' % _prefix(private),
            '--infodir=%s/share/info' % _prefix(private),
            '--without-included-gettext')
    make()


def package(startdir, srcdir, pkgdir, private):
    cd('%s/Recode-%s' % (srcdir, pkgver))
    make('install')
    
    _pre = pkgdir + _prefix(private)
    _dir = '%s/share/licenses/%s' % (_pre, pkgname)
    ln('/usr/share/licenses/common/GPL2', '%s/LICENSE.gpl2' % _dir, parents = True)
    ln('/usr/share/licenses/common/LGPL2.1', '%s/LICENSE.lgpl2.1' % _dir)
    
    if i_use_man:
        rm_r(_pre + '/share/man')
    if i_use_info:
        rm_r(_pre + '/share/info')
    filter_locale(i_use_locale, pkgdir, _prefix(private))


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

