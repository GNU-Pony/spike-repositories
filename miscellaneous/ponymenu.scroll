# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *
import os

i_use_info = get('I_USE_INFO', 'y').lower().startswith('y')

pkgname = 'ponymenu'
pkgver = '1.2'
pkgdesc = 'Quick terminal based application menu'
upstream = 'https://github.com/maandree/ponymenu'
arch = ['any']
freedom = SOFTWARE | MEDIA
license = ['GPL3']
private = SUPPORTED
depends = ['python3', 'coreutils']
makedepends = ['make', 'coreutils']
if i_use_info:
    makedepends.append('texinfo')
    makedepends.append('gzip')
source = ['%s/archive/%s.tar.gz' % (upstream, pkgver)]
sha3sums = ['48AA1D3F420374875F49A6E5070082116B6C31802EF005B1577BAA838E4FB695419C5A56327F09D29E6D40816C0267E45EE509CA9EEF5C2D895CB69284F22662D6E0A48BACDD0F54']

_prefix = lambda private : '/usr' if not private else path('~/.local')
_conf = lambda private : '/etc' if not private else path('~/.config/ponymenu/')


def ride(private):
    execute('ponymenu')


def build(startdir, srcdir, pkgdir, private):
    cd('%s/ponymenu-%s' % (srcdir, pkgver))
    if i_use_info:
        make('PREFIX=%s' % _prefix(private), 'SYSCONF=%s' % _conf(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'info')


def package(startdir, srcdir, pkgdir, private):
    cd('%s/ponymenu-%s' % (srcdir, pkgver))
    make('PREFIX=%s' % _prefix(private), 'SYSCONF=%s' % _conf(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'install-cmd', 'install-license')
    if i_use_info:
        make('PREFIX=%s' % _prefix(private), 'SYSCONF=%s' % _conf(private), 'PKGNAME=%s' % pkgname, 'DESTDIR=%s' % pkgdir, 'install-info')
    _dir = '%s%s/share/licenses/%s' % (pkgdir, _prefix(private), pkgname)
    rm('%s/LICENSE' % _dir)
    ln('/usr/share/licenses/common/GPL3', '%s/LICENSE' % _dir)


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

