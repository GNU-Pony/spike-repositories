# -*- python -*-
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.  [GNUAllPermissive]
from dragonsuite import *

i_use_info       = get('I_USE_INFO',       'y').lower().startswith('y')
i_use_man        = get('I_USE_MAN',        'y').lower().startswith('y')
i_use_locale     = get('I_USE_LOCALE'.     '*')
i_use_largefiles = get('I_USE_LARGEFILES', 'y').lower().startswith('y')
i_use_acl        = get('I_USE_ACL',        'y').lower().startswith('y')
i_use_xattr      = get('I_USE_XATTR',      'y').lower().startswith('y')
i_use_libcap     = get('I_USE_LIBCAP',     'y').lower().startswith('y')
i_use_gmp        = get('I_USE_GMP',        'y').lower().startswith('y')
i_use_pth        = get('I_USE_PTH'.        'n').lower().startswith('y')

pkgname = 'coreutils'
pkgver = '8.21'
pkgdesc = 'The basic file, shell and text manipulation utilities of the GNU operating system'
upstream = 'http://www.gnu.org/software/coreutils'
arch = ['x86_64']
freedom = SOFTWARE | MEDIA
license = ['GPL3']
private = SUPPORTED
depends = ['glibc', 'pam']
makedepends = ['glibc', 'pan', 'gcc', 'sh', 'make', 'sed', 'coreutils', 'm4']
if i_use_acl:
    depends.append('acl')
    makedepends.append('acl')
if i_use_libcap:
    depends.append('libcap')
    makedepends.append('libcap')
if i_use_gmp:
    depends.append('gmp')
    makedepends.append('gmp')
if i_use_pth:
    depends.append('pth')
    makedepends.append('pth')
makedepends.append('texinfo') # for info manual
makedepends.append('gzip') # for manpage and info
source = ['http://ftp.gnu.org/gnu/coreutils/coreutils-%s.tar.xz' % pkgver]
sha3sums = ['62FD863063C5B920A0A709ACBB3B45E2B9F97ECCD74540C92B2DD709DD5D9B3528107C3FBBCDF5190B4E773946AA7DC745A78C1850DAF684E12096C3EE2DE6E352EED604ECC72E61']


_prefix = lambda private : (path('~/.local') if private else '/usr')


def ride(private):
    execute('info', 'coreutils')


def build(startdir, srcdir, pkgdir, private):
    cd('%s/coreutils-%s' % (srcdir, pkgver))
    
    conflicting = ['groups',    # provided by  shadow
                   'hostname',  # provided by  inetutils
                   'kill',      # provided by  util-linux
                   'uptime']    # provided by  procps-ng
    
    args = ['./configure', '--prefix=%s' % _prefix(private), '--libexecdir=%s/libexec' % (_prefix(private))]
    
    if not i_use_largefiles:  args.append('--disable-largefile')
    if not i_use_acl:         args.append('--disable-acl')
    if not i_use_xattr:       args.append('--disable-xattr')
    if not i_use_libcap:      args.append('--disable-libcap')
    if not i_use_gmp:         args.append('--without-gmp')
    
    args.append('--enable-threads=%s' % ('pth' if i_use_pth else 'posix'))
    args.append('--enable-no-install-program=%s' % ','.join(conflicting))
    
    execute(args)
    make()


def check(startdir, srcdir, pkgdir, private):
    cd('%s/coreutils-%s' % (srcdir, pkgver))
    make('RUN_EXPENSIVE_TESTS=yes', 'check')


def package(startdir, srcdir, pkgdir, private):
    cd('%s/coreutils-%s' % (srcdir, pkgver))
    make('DESTDIR=%s' % pkgdir, 'install')
    
    _licenses = pkgdir + _prefix(private) + '/share/licenses'
    mkdir_p(_licenses)
    ln('/usr/share/licenses/common/GPL3', '%s/%s' % (_licenses, pkgname))
    
    if not man:
        rm_r(pkgdir + _prefix(private) + '/share/man')
    if not i_use_info:
        rm_r(pkgdir + _prefix(private) + '/share/info')
    filter_locale(i_use_locale, pkgdir, _prefix(private))


def post_install(tmpdir, rootdir, installedfiles, private):
    post_install_info(rootdir, installedfiles, private, i_use_info)


def pre_upgrade(tmpdir, rootdir, installedfiles, private):
    pre_upgrade_info(rootdir, installedfiles, private)


def post_upgrade(tmpdir, rootdir, installedfiles, private):
    post_upgrade_info(rootdir, installedfiles, private, i_use_info)


def pre_uninstall(tmpdir, rootdir, installedfiles, private):
    pre_uninstall_info(rootdir, installedfiles, private)

